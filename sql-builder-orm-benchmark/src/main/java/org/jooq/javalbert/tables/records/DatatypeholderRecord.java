/*
 * This file is generated by jOOQ.
*/
package org.jooq.javalbert.tables.records;


import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.javalbert.tables.Datatypeholder;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatatypeholderRecord extends UpdatableRecordImpl<DatatypeholderRecord> implements Record10<Long, Integer, Boolean, Long, BigDecimal, Double, Float, Date, Timestamp, String> {

    private static final long serialVersionUID = 787541645;

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.INT_VAL</code>.
     */
    public void setIntVal(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.INT_VAL</code>.
     */
    public Integer getIntVal() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.BOOLEAN_VAL</code>.
     */
    public void setBooleanVal(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.BOOLEAN_VAL</code>.
     */
    public Boolean getBooleanVal() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.BIGINT_VAL</code>.
     */
    public void setBigintVal(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.BIGINT_VAL</code>.
     */
    public Long getBigintVal() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.DECIMAL_VAL</code>.
     */
    public void setDecimalVal(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.DECIMAL_VAL</code>.
     */
    public BigDecimal getDecimalVal() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.DOUBLE_VAL</code>.
     */
    public void setDoubleVal(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.DOUBLE_VAL</code>.
     */
    public Double getDoubleVal() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.REAL_VAL</code>.
     */
    public void setRealVal(Float value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.REAL_VAL</code>.
     */
    public Float getRealVal() {
        return (Float) get(6);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.DATE_VAL</code>.
     */
    public void setDateVal(Date value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.DATE_VAL</code>.
     */
    public Date getDateVal() {
        return (Date) get(7);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.TIMESTAMP_VAL</code>.
     */
    public void setTimestampVal(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.TIMESTAMP_VAL</code>.
     */
    public Timestamp getTimestampVal() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>PUBLIC.DATATYPEHOLDER.VARCHAR_VAL</code>.
     */
    public void setVarcharVal(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>PUBLIC.DATATYPEHOLDER.VARCHAR_VAL</code>.
     */
    public String getVarcharVal() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Integer, Boolean, Long, BigDecimal, Double, Float, Date, Timestamp, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Integer, Boolean, Long, BigDecimal, Double, Float, Date, Timestamp, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Datatypeholder.DATATYPEHOLDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Datatypeholder.DATATYPEHOLDER.INT_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Datatypeholder.DATATYPEHOLDER.BOOLEAN_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Datatypeholder.DATATYPEHOLDER.BIGINT_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field5() {
        return Datatypeholder.DATATYPEHOLDER.DECIMAL_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return Datatypeholder.DATATYPEHOLDER.DOUBLE_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Float> field7() {
        return Datatypeholder.DATATYPEHOLDER.REAL_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field8() {
        return Datatypeholder.DATATYPEHOLDER.DATE_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Datatypeholder.DATATYPEHOLDER.TIMESTAMP_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Datatypeholder.DATATYPEHOLDER.VARCHAR_VAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIntVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getBooleanVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getBigintVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value5() {
        return getDecimalVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getDoubleVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float value7() {
        return getRealVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value8() {
        return getDateVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getTimestampVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getVarcharVal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value2(Integer value) {
        setIntVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value3(Boolean value) {
        setBooleanVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value4(Long value) {
        setBigintVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value5(BigDecimal value) {
        setDecimalVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value6(Double value) {
        setDoubleVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value7(Float value) {
        setRealVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value8(Date value) {
        setDateVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value9(Timestamp value) {
        setTimestampVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord value10(String value) {
        setVarcharVal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DatatypeholderRecord values(Long value1, Integer value2, Boolean value3, Long value4, BigDecimal value5, Double value6, Float value7, Date value8, Timestamp value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatatypeholderRecord
     */
    public DatatypeholderRecord() {
        super(Datatypeholder.DATATYPEHOLDER);
    }

    /**
     * Create a detached, initialised DatatypeholderRecord
     */
    public DatatypeholderRecord(Long id, Integer intVal, Boolean booleanVal, Long bigintVal, BigDecimal decimalVal, Double doubleVal, Float realVal, Date dateVal, Timestamp timestampVal, String varcharVal) {
        super(Datatypeholder.DATATYPEHOLDER);

        set(0, id);
        set(1, intVal);
        set(2, booleanVal);
        set(3, bigintVal);
        set(4, decimalVal);
        set(5, doubleVal);
        set(6, realVal);
        set(7, dateVal);
        set(8, timestampVal);
        set(9, varcharVal);
    }
}
